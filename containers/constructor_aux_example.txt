 /**
   * Destroy the object pointed to by a pointer type.
   */
  template<typename _Tp>
    _GLIBCXX14_CONSTEXPR inline void
    _Destroy(_Tp* __pointer)
    {
#if __cplusplus > 201703L
      std::destroy_at(__pointer);
#else
      __pointer->~_Tp();
#endif
    }

  template<bool>
    struct _Destroy_aux
    {
      template<typename _ForwardIterator>
	static _GLIBCXX20_CONSTEXPR void
	__destroy(_ForwardIterator __first, _ForwardIterator __last)
	{
	  for (; __first != __last; ++__first)
	    std::_Destroy(std::__addressof(*__first));
	}
    };

  template<>
    struct _Destroy_aux<true>
    {
      template<typename _ForwardIterator>
        static void
        __destroy(_ForwardIterator, _ForwardIterator) { }
    };




-----------------------------------------------------------------------------------------------------



    // most vexing parse?
    #include <iostream>

void outerFunction() {
    // İç içe fonksiyonun deklarasyonu
    void innerFunction();

    std::cout << "outerFunction starts" << std::endl;
    
    innerFunction(); // İç içe fonksiyonu çağırabiliriz

    std::cout << "outerFunction ends" << std::endl;
}

void innerFunction() {
    std::cout << "innerFunction called" << std::endl;
}

int main() {
    outerFunction();
    return 0;
}

-----------------------------------------------------------------------------------------------------
https://gcc.gnu.org/bugzilla/show_bug.cgi?id=51823   // reverse_iterator::operator*() issue
-----------------------------------------------------------------------------------------------------
